name: Test and Deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: nc_news_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U test_user" --health-interval 10s

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Use node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to start..."
          while ! pg_isready -h localhost -p 5432 -U test_user; do
            sleep 1
          done

      - name: Delay before setup
        run: sleep 3

      - name: Check PostgreSQL is Running
        run: sudo netstat -plnt | grep 5432

      - name: Setup database
        run: npm run setup-dbs
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: test_user
          PGPASSWORD: test_password
          PGDATABASE: nc_news_test

      - name: Delay before seed
        run: sleep 3

      - name: Seed database
        run: npm run seed
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: test_user
          PGPASSWORD: test_password
          PGDATABASE: nc_news_test

      - name: Delay before test
        run: sleep 5

      - name: Run tests
        run: npm test
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: test_user
          PGPASSWORD: test_password
          PGDATABASE: nc_news_test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Deploy to Render
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
